<?php

/**
 * FLUG Service API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * A service API for the Fyns Linux User Group website
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace OpenAPIServer\Api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractGetsApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractGetsApi
{
    /**
     * GET getBlogs
     * Summary: Retrieve list of blog posts
     * Notes: Returns a list of blog posts
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getBlogs(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $page = (key_exists('page', $queryParams)) ? $queryParams['page'] : null;
        $max = (key_exists('max', $queryParams)) ? $queryParams['max'] : null;
        $initialLetter = (key_exists('initial_letter', $queryParams)) ? $queryParams['initial_letter'] : null;
        $order = (key_exists('order', $queryParams)) ? $queryParams['order'] : null;
        $message = "How about implementing getBlogs as a GET method in OpenAPIServer\Api\GetsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getEvents
     * Summary: Retrieve list of events
     * Notes: Returns a list of events
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getEvents(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $page = (key_exists('page', $queryParams)) ? $queryParams['page'] : null;
        $max = (key_exists('max', $queryParams)) ? $queryParams['max'] : null;
        $initialLetter = (key_exists('initial_letter', $queryParams)) ? $queryParams['initial_letter'] : null;
        $order = (key_exists('order', $queryParams)) ? $queryParams['order'] : null;
        $message = "How about implementing getEvents as a GET method in OpenAPIServer\Api\GetsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getImages
     * Summary: Retrieve list of images
     * Notes: Returns a list of images
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getImages(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $page = (key_exists('page', $queryParams)) ? $queryParams['page'] : null;
        $max = (key_exists('max', $queryParams)) ? $queryParams['max'] : null;
        $initialLetter = (key_exists('initial_letter', $queryParams)) ? $queryParams['initial_letter'] : null;
        $order = (key_exists('order', $queryParams)) ? $queryParams['order'] : null;
        $message = "How about implementing getImages as a GET method in OpenAPIServer\Api\GetsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getUsers
     * Summary: Retrieve list of users
     * Notes: Returns a list of users
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getUsers(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $page = (key_exists('page', $queryParams)) ? $queryParams['page'] : null;
        $max = (key_exists('max', $queryParams)) ? $queryParams['max'] : null;
        $initialLetter = (key_exists('initial_letter', $queryParams)) ? $queryParams['initial_letter'] : null;
        $order = (key_exists('order', $queryParams)) ? $queryParams['order'] : null;
        $message = "How about implementing getUsers as a GET method in OpenAPIServer\Api\GetsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
