<?php

/**
 * FLUG Service API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * A service API for the Fyns Linux User Group website
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace OpenAPIServer\Api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractUpdateApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractUpdateApi
{
    /**
     * PATCH updateBlog
     * Summary: Update blog post details
     * Notes: Updates the details of a specific blog post by ID
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int $uid UID of the resource to retrieve or modify
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateBlog(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $uid
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateBlog as a PATCH method in OpenAPIServer\Api\UpdateApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PATCH updateEvent
     * Summary: Update event details
     * Notes: Updates the details of a specific event by ID
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int $uid UID of the resource to retrieve or modify
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateEvent(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $uid
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateEvent as a PATCH method in OpenAPIServer\Api\UpdateApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PATCH updateImage
     * Summary: Update image details
     * Notes: Updates the details of a specific image by ID
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int $uid UID of the resource to retrieve or modify
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateImage(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $uid
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateImage as a PATCH method in OpenAPIServer\Api\UpdateApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PATCH updateUser
     * Summary: Update user details
     * Notes: Updates the details of a specific user by ID
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param int $uid UID of the resource to retrieve or modify
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateUser(
        ServerRequestInterface $request,
        ResponseInterface $response,
        int $uid
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateUser as a PATCH method in OpenAPIServer\Api\UpdateApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
